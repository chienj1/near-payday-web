{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Cover.js","assets/img/cover_img.png","components/utils/Notifications.js","components/flowplace/AddPayflow.js","components/flowplace/StartPayflow.js","components/flowplace/InputAmmount.js","utils/flowplace.js","components/flowplace/Payflow.js","components/utils/Loader.js","components/flowplace/Payflows.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","coverImg","style","background","minHeight","maxWidth","src","alt","Button","defaultProps","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","AddPayflow","save","useState","deposit","setDeposit","show","setShow","handleClose","width","class","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","placeholder","onChange","e","value","Footer","disabled","StartPayflow","Date","beginTime","setBeginTime","endTime","setEndTime","numofpay","setNumOfPay","receiver","setReceiver","clearIcon","minDate","parseInt","InputAmmount","description","ammount","setAmmount","GAS","createPayflow","payflow","uuid4","setPayflow","parseNearAmount","getPayflows","depositAssets","withdrawAssets","startPayment","updateAvailable","getPayment","killPayflow","Payflow","withdraw","getpay","update","killpay","owner","balance","initBalance","available","taken","start","isYours","enablePayment","then","resp","estclaim","estimateClaimable","Col","hide","Card","Text","toString","btime","getTime","etime","ratio","confined_ratio","Math","min","max","enable","Loader","role","Payflows","payflows","setPayflows","loading","setLoading","useCallback","getPayflowList","console","log","error","addPayflow","data","toast","addMorePay","reducePay","updatePayflowInfo","receivePayflow","removePay","useEffect","Row","xs","sm","lg","map","_payflow","App","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.7dca92c7.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"ffpay.looksrare.testnet\";\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case \"mainnet\":\r\n      return {\r\n        networkId: \"mainnet\",\r\n        nodeUrl: \"https://rpc.mainnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.near.org\",\r\n        helperUrl: \"https://helper.mainnet.near.org\",\r\n        explorerUrl: \"https://explorer.mainnet.near.org\",\r\n      };\r\n    case \"testnet\":\r\n      return {\r\n        networkId: \"testnet\",\r\n        nodeUrl: \"https://rpc.testnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.testnet.near.org\",\r\n        helperUrl: \"https://helper.testnet.near.org\",\r\n        explorerUrl: \"https://explorer.testnet.near.org\",\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;","import environment from \"./config\";\r\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\r\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst nearEnv = environment(\"testnet\");\r\n\r\nexport async function initializeContract() {\r\n    const near = await connect(\r\n      Object.assign(\r\n        { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n        nearEnv\r\n      )\r\n    );\r\n    window.walletConnection = new WalletConnection(near);\r\n    window.accountId = window.walletConnection.getAccountId();\r\n    window.contract = new Contract(\r\n      window.walletConnection.account(),\r\n      nearEnv.contractName,\r\n      {\r\n        viewMethods: [\"getPayflow\", \"getPayflows\"],\r\n        changeMethods: [\"setPayflow\", \"depositAssets\", \"withdrawAssets\", \"startPayment\", \r\n                        \"killPayflow\", \"getPayment\"],\r\n      }\r\n    );\r\n  }\r\n\r\n  export async function accountBalance() {\r\n    return formatNearAmount(\r\n      (await window.walletConnection.account().getAccountBalance()).total,\r\n      2\r\n    );\r\n  }\r\n  \r\n  export async function getAccountId() {\r\n    return window.walletConnection.getAccountId();\r\n  }\r\n  \r\n  export function login() {\r\n    window.walletConnection.requestSignIn(nearEnv.contractName);\r\n  }\r\n  \r\n  export function logout() {\r\n    window.walletConnection.signOut();\r\n    window.location.reload();\r\n  }","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","export default __webpack_public_path__ + \"static/media/cover_img.60bc5ae5.png\";","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst AddPayflow = ({ save }) => {\r\n    const [deposit, setDeposit] = useState(0);\r\n\r\n    const isFormFilled = () => deposit;\r\n  \r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n            onClick={handleShow}\r\n            variant=\"dark\"\r\n            className=\"rounded-pill px-0\"\r\n            style={{ width: \"38px\" }}\r\n          >\r\n            <i class=\"bi bi-plus\"></i>\r\n          </Button>\r\n          <Modal show={show} onHide={handleClose} centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>New Payflow</Modal.Title>\r\n            </Modal.Header>\r\n            <Form>\r\n              <Modal.Body>\r\n                <FloatingLabel\r\n                  controlId=\"inputdeposit\"\r\n                  label=\"Deposit\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"ammount\"\r\n                    onChange={(e) => {\r\n                        setDeposit(e.target.value);\r\n                    }}\r\n                  />\r\n                </FloatingLabel>\r\n              </Modal.Body>\r\n            </Form>\r\n            <Modal.Footer>\r\n              <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"dark\"\r\n                disabled={!isFormFilled()}\r\n                onClick={() => {\r\n                  save({}, deposit);\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    AddPayflow.propTypes = {\r\n      save: PropTypes.func.isRequired,\r\n    };\r\n    \r\n    export default AddPayflow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport  DateTimePicker from \"react-datetime-picker\";\r\n\r\nconst StartPayflow = ({ id, save }) => {\r\n    const [beginTime, setBeginTime] = useState(new Date());\r\n    const [endTime, setEndTime] = useState(new Date());\r\n    const [numofpay, setNumOfPay] = useState(0);\r\n    const [receiver, setReceiver] = useState(\"\");\r\n    \r\n    const isFormFilled = () => beginTime && endTime && numofpay && receiver;\r\n    \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n            onClick={handleShow}\r\n            variant=\"dark\"\r\n            className=\"w-40 py-3\"\r\n          >\r\n            Start\r\n          </Button>\r\n          <Modal show={show} onHide={handleClose} centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Start Payflow (cannot modify anything after start)</Modal.Title>\r\n            </Modal.Header>\r\n            <Form>\r\n              <Modal.Body>\r\n              \t<div> Begin Time\r\n                <DateTimePicker \r\n                  value={beginTime}\r\n                  clearIcon={null} \r\n                  minDate={new Date()}\r\n                  onChange={(e) => {\r\n                    setBeginTime(e);\r\n                  }} \r\n                />\r\n                </div>\r\n                <div> End Time\r\n                <DateTimePicker \r\n                  value={endTime}\r\n                  clearIcon={null} \r\n                  minDate={new Date()} \r\n                  onChange={(e) => {\r\n                    setEndTime(e);\r\n                  }} \r\n                />\r\n                </div>\r\n                <FloatingLabel\r\n                  controlId=\"inputNOP\"\r\n                  label=\"Place holder\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Place holder\"\r\n                    onChange={(e) => {\r\n                        setNumOfPay(e.target.value);\r\n                    }}\r\n                  />\r\n                </FloatingLabel>\r\n                <FloatingLabel\r\n                  controlId=\"inputReceiver\"\r\n                  label=\"Receiver\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    onChange={(e) => {\r\n                        setReceiver(e.target.value);\r\n                    }}\r\n                  />\r\n                </FloatingLabel>\r\n              </Modal.Body>\r\n            </Form>\r\n            <Modal.Footer>\r\n              <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"dark\"\r\n                disabled={!isFormFilled()}\r\n                onClick={() => {\r\n                  save(id, beginTime, endTime, parseInt(numofpay), receiver);\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Start\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    StartPayflow.propTypes = {\r\n      id:  PropTypes.string.isRequired,\r\n      save: PropTypes.func.isRequired,\r\n    };\r\n    \r\n    export default StartPayflow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst InputAmmount = ({ id, save, description, label }) => {\r\n    const [ammount, setAmmount] = useState(\"\");\r\n    \r\n    const isFormFilled = () => ammount;\r\n    \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n            onClick={handleShow}\r\n            className=\"w-40 py-3\"\r\n            variant=\"outline-dark\"\r\n          >\r\n            {description}\r\n          </Button>\r\n          <Modal show={show} onHide={handleClose} centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{description}</Modal.Title>\r\n            </Modal.Header>\r\n            <Form>\r\n              <Modal.Body>\r\n                <FloatingLabel\r\n                  controlId=\"inputAmmount\"\r\n                  className=\"mb-3\"\r\n                  label={label}\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"ammount\"\r\n                    onChange={(e) => {\r\n                        setAmmount(e.target.value);\r\n                    }}\r\n                  />\r\n                </FloatingLabel>\r\n              </Modal.Body>\r\n            </Form>\r\n            <Modal.Footer>\r\n              <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"dark\"\r\n                disabled={!isFormFilled()}\r\n                onClick={() => {\r\n                  save(id, ammount);\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    InputAmmount.propTypes = {\r\n      id:  PropTypes.string.isRequired,\r\n      save: PropTypes.func.isRequired,\r\n      description: PropTypes.string.isRequired\r\n    };\r\n    \r\n    export default InputAmmount;\r\n","import { v4 as uuid4 } from \"uuid\";\r\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst GAS = 100000000000000;\r\n\r\nexport function createPayflow(payflow, deposit) {\r\n    payflow.id = uuid4();\r\n    return window.contract.setPayflow({ payflow }, GAS, parseNearAmount(deposit+\"\"));\r\n  }\r\n  \r\nexport function getPayflows() {\r\n  return window.contract.getPayflows();\r\n}\r\n\r\nexport async function depositAssets(id, deposit) {\r\n  await window.contract.depositAssets({ id: id }, GAS, parseNearAmount(deposit+\"\"));\r\n}\r\n\r\nexport async function withdrawAssets(id, ammount) {\r\n    await window.contract.withdrawAssets({ id: id, ammount: parseNearAmount(ammount+\"\") }, GAS);\r\n}\r\n\r\nexport async function startPayment(id, beginTime, endTime, numofpay, receiver) {\r\n    await window.contract.startPayment({ id: id, \r\n                                  beginTime: beginTime, \r\n                                    endTime: endTime, \r\n                                   numofpay: numofpay, \r\n                                   receiver: receiver }, GAS);\r\n}\r\n\r\nexport async function updateAvailable(id) {\r\n    await window.contract.updateAvailable({ id: id }, GAS);\r\n}\r\n\r\nexport async function getPayment(id, ammount) {\r\n    await window.contract.getPayment({ id: id, ammount: parseNearAmount(ammount+\"\") }, GAS);\r\n}\r\n\r\nexport async function killPayflow( id ) {\r\n  await window.contract.killPayflow({ id: id }, GAS);\r\n}","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { utils } from \"near-api-js\";\r\nimport { Card, Button, Col, Stack } from \"react-bootstrap\";\r\nimport StartPayflow from \"./StartPayflow\";\r\nimport InputAmmount from \"./InputAmmount\";\r\nimport { startPayment, getPayflows } from \"../../utils/flowplace\";\r\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\n\r\nconst Payflow = ({ payflow, deposit, withdraw, update, getpay, killpay }) => {\r\n  const { id, beginTime, endTime, numofpay, receiver, owner, \r\n          balance, initBalance, available, taken, start } = payflow;\r\n\r\n  const account = window.walletConnection.account();\r\n  let isYours = owner === account.accountId || receiver === account.accountId;\r\n\r\n  const triggerKillPay  = () => { killpay(id) }; \r\n  \r\n  const enablePayment = async (id, beginTime, endTime, numofpay, receiver) => {\r\n    startPayment(id, beginTime, endTime, numofpay, receiver).then((resp) => { getPayflows(); });\r\n  } \r\n\r\n\r\n  var [estclaim, estimateClaimable] = useState(0); \r\n\r\n  return (\r\n    <>\r\n    { true ? (\r\n      <Col key={id} hide={isYours}>\r\n        <Card className=\" h-100\" >\r\n          <Card.Header>\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n              <div>\r\n                <Button\r\n                  onClick={triggerKillPay}\r\n                  variant=\"dark\"\r\n                  className=\"rounded-pill px-0\"\r\n                  style={{ width: \"36px\" }}\r\n                >\r\n                  X\r\n                </Button>\r\n              </div>\r\n              <div>Sender: {owner}</div>\r\n            </Stack>      \r\n          </Card.Header>\r\n          <Card.Body className=\"d-flex  flex-column text-center\">\r\n            <Card.Title>To {receiver || \"unknown\"}</Card.Title>\r\n            <Card.Text className=\"flex-grow-1 \">{receiver}</Card.Text>\r\n            <Card.Text className=\"text-secondary\">\r\n              <div>balance: {formatNearAmount(balance) || \"null\"} Near</div>\r\n              <div><hr /></div>\r\n              <div>begin at: {beginTime? new Date(beginTime).toString() : \"Not set yet\"}</div>\r\n              <div>⇩</div>\r\n              <div>end at: {endTime? new Date(endTime).toString() : \"Not set yet\"}</div>\r\n              <div><hr /></div>\r\n              <div>place holder: {numofpay || \"null\"}</div>\r\n              { start ? (<div>\r\n                            <div>initBalance: {formatNearAmount(initBalance)} Near</div>\r\n                            <div>claimable: {formatNearAmount(available)} Near</div>\r\n                            <div>est. claimable: {estclaim} Near \r\n                              <Button onClick={ ()=> {\r\n                                var btime = new Date(beginTime).getTime();\r\n  \t\t\t\t var etime = new Date(endTime).getTime();\r\n                                var nowtime = new Date().getTime();\r\n                                \r\n                                var ratio = ((nowtime-btime)/(etime-btime));\r\n                                var confined_ratio = Math.min(1, Math.max(ratio, 0));\r\n                                var est = initBalance*confined_ratio-taken;\r\n                 \t         estimateClaimable(est/1.0e+24);                                                             \r\n                              }}>\r\n                                estimate\r\n                              </Button>\r\n                            </div>\r\n                            <div>claimed: {formatNearAmount(taken)} Near</div>\r\n                        </div>) : (null) }\r\n            </Card.Text>\r\n            { !start ? (<div>\r\n              <InputAmmount id={id} save={withdraw} description={\"Withdraw\"} enable={true} label={\"max: \"+(balance/1.0e+24).toString()+\" N\"}/>\r\n              <InputAmmount id={id} save={deposit} description={\"Deposit\"} enable={true} label={\"ammount\"}/>\r\n              <StartPayflow id={id} save={enablePayment}/>\r\n            </div>) : (<div>\r\n              <InputAmmount id={id} save={getpay} description={\"Claim\"} label={\"max: \"+(estclaim).toString()+\" N\"}/>\r\n            </div>)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>) : (\r\n        <span>placeholder</span>\r\n      )\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nPayflow.propTypes = {\r\n  payflow: PropTypes.instanceOf(Object).isRequired,\r\n  deposit: PropTypes.func.isRequired,\r\n  withdraw: PropTypes.func.isRequired, \r\n  getpay: PropTypes.func.isRequired,\r\n  killpay: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Payflow;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddPayflow from \"./AddPayflow\";\r\nimport Payflow from \"./Payflow\";\r\nimport Loader from \"../utils/Loader\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { NotificationSuccess, NotificationError } from \"../utils/Notifications\";\r\nimport {\r\n  createPayflow,\r\n  getPayflows as getPayflowList,\r\n  depositAssets,\r\n  withdrawAssets,\r\n  startPayment,\r\n  updateAvailable,\r\n  getPayment,\r\n  killPayflow\r\n} from \"../../utils/flowplace\";\r\n\r\n\r\n\r\n\r\nconst Payflows = () => {\r\n  const [payflows, setPayflows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getPayflows = useCallback( async () => {\r\n      try {\r\n        setLoading(true);\r\n        setPayflows(await getPayflowList());\r\n      } catch (error) {\r\n        console.log({ error });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const addPayflow = async (data, deposit) => {\r\n    try {\r\n      createPayflow(data, deposit).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"Product added successfully.\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create a product.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const addMorePay = async (id, deposit) => {\r\n    try {\r\n      setLoading(true);\r\n      await depositAssets(id, deposit).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"Deposit successfully.\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Deposit failed.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const reducePay = async (id, ammount) => {\r\n    try {\r\n      await withdrawAssets(id, ammount).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"Withdraw successfully.\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Withdraw failed\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const enablePayment = async (id, beginTime, endTime, numofpay, receiver) => {\r\n    try {\r\n      startPayment(id, beginTime, endTime, numofpay, receiver).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"....\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"....\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  } // not used\r\n\r\n  const updatePayflowInfo = async (id) => {\r\n    try {\r\n      await updateAvailable(id).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"....\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"....\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const receivePayflow = async (id, ammount) => {\r\n    try {\r\n      await getPayment(id, ammount).then((resp) => { getPayflows(); });\r\n      toast(<NotificationSuccess text=\"....\" />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"....\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const removePay = async (id) =>{\r\n    try {\r\n      await killPayflow(id).then((resp) => { getPayflows(); });\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"....\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { getPayflows(); }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n          <>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n              <h1 className=\"fs-4 fw-bold mb-0\">Near PayDay</h1>\r\n              <AddPayflow save={addPayflow} />\r\n            </div>\r\n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n              {payflows.map((_payflow) => (\r\n                <Payflow payflow={{ ..._payflow, }}\r\n                         deposit={addMorePay}\r\n                         withdraw={reducePay}\r\n                         update={updatePayflowInfo}\r\n                         getpay={receivePayflow}\r\n                         killpay={removePay}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </>\r\n        ) : (\r\n              <Loader />\r\n            )\r\n      }\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Payflows;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport Cover from \"./components/utils/Cover\";\nimport coverImg from \"./assets/img/cover_img.png\"\nimport { Notification } from \"./components/utils/Notifications\";\nimport Payflows from \"./components/flowplace/Payflows\";\n\nfunction App() {\n  const account = window.walletConnection.account();\n  const [balance, setBalance] = useState(\"0\");\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n\n  useEffect(() => { getBalance();}, [getBalance]);\n\n  return (\n    <>\n      <Notification />\n      {account.accountId ? (\n        <Container fluid=\"md\">\n          <Nav className=\"justify-content-end pt-3 pb-5\">\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <main> <Payflows /></main>\n        </Container>\n      ) : (\n        <Cover name=\"Near PayDay\" login={login} coverImg={coverImg} />\n      )}\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();"],"sourceRoot":""}